import{_ as o,o as e,c,a as s,d as t,b as n,e as p,r as u}from"./app.8b62e66d.js";const l={},k=s("h1",{id:"async-\u51FD\u6570",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#async-\u51FD\u6570","aria-hidden":"true"},"#"),n(" async \u51FD\u6570")],-1),i=n("async \u51FD\u6570\u662F "),r={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AsyncFunction",target:"_blank",rel:"noopener noreferrer"},d=n("AsyncFunction"),f=n(" \u6784\u9020\u51FD\u6570\u7684\u5B9E\u4F8B\uFF0C\u53EF\u4EE5\u4F7F\u7528 "),y=s("code",null,"async",-1),_=n(" \u5173\u952E\u5B57\u58F0\u660E\uFF0C\u8FD9\u4E2A\u5173\u952E\u5B57\u53EF\u4EE5\u7528\u5728\u51FD\u6570\u58F0\u660E\u3001\u51FD\u6570\u8868\u8FBE\u5F0F\u3001\u7BAD\u5934\u51FD\u6570\u548C\u65B9\u6CD5\u4E0A\u3002async \u51FD\u6570\u7684\u8FD4\u56DE\u503C\u662F\u4E00\u4E2A Promise \u5BF9\u8C61\u3002async \u51FD\u6570\u4E2D\u53EF\u4EE5\u4F7F\u7528 "),m=s("code",null,"await",-1),w=n(" \u64CD\u4F5C\u7B26\uFF0Cawait \u8868\u8FBE\u5F0F\u4F1A\u6682\u505C\u5F53\u524D async \u51FD\u6570\u7684\u6267\u884C\uFF0C\u7B49\u5F85 Promise \u5904\u7406\u5B8C\u6210\u3002"),h=p(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token parameter">delay</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> delay<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token string">&#39;ok&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 5s \u540E\u6253\u5370\u51FA ok</span>
</code></pre></div><h2 id="\u4E32\u884C\u548C\u5E76\u884C" tabindex="-1"><a class="header-anchor" href="#\u4E32\u884C\u548C\u5E76\u884C" aria-hidden="true">#</a> \u4E32\u884C\u548C\u5E76\u884C</h2><p>\u5F53\u4E00\u4E2A async \u51FD\u6570\u4E2D\u6709\u591A\u4E2A await \u64CD\u4F5C\u7684\u65F6\u5019\u8981\u6CE8\u610F\u5E76\u884C\u4E32\u884C\u7684\u95EE\u9898\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u4E32\u884C</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">doPromise1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> res2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">doPromise2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// do someting ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5E76\u884C</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token function">doPromise1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token function">doPromise2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> res1 <span class="token operator">=</span> <span class="token keyword">await</span> p1<span class="token punctuation">;</span>
  <span class="token keyword">const</span> res2 <span class="token operator">=</span> <span class="token keyword">await</span> p2<span class="token punctuation">;</span>
  <span class="token comment">// do someting ...</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u5B9E\u73B0\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u539F\u7406" aria-hidden="true">#</a> \u5B9E\u73B0\u539F\u7406</h2>`,5),v=n("async/await \u672C\u8D28\u4E0A\u662F\u4E00\u4E2A "),g={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*",target:"_blank",rel:"noopener noreferrer"},x=n("generator \u51FD\u6570"),b=n("\u548C co \u7684\u8BED\u6CD5\u7CD6\uFF1A"),j=p(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">co</span><span class="token punctuation">(</span><span class="token parameter">it</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">next</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> done <span class="token punctuation">}</span> <span class="token operator">=</span> it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">next</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token operator">*</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token string">&#39;ok&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">co</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 5s \u540E\u6253\u5370\u51FA ok</span>
</code></pre></div>`,1);function P(S,N){const a=u("ExternalLinkIcon");return e(),c("div",null,[k,s("p",null,[i,s("a",r,[d,t(a)]),f,y,_,m,w]),h,s("p",null,[v,s("a",g,[x,t(a)]),b]),j])}var B=o(l,[["render",P],["__file","async_function.html.vue"]]);export{B as default};
